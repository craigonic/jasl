#!/usr/bin/perl
################################################################################
# Driver.pl - This file contains the Driver script, which is used to test the  #
#             functionality of the public <A HREF="http://java.sun.com/">Java</A> classes defined in the <A HREF="jasl/jasl.html">jasl</A>     #
#             package hierarchy, accessed by <A HREF="http://www.perl.org/">Perl</A> using <A HREF="swig/swig.html">libraries</A> and files    #
#             generated by <A HREF="http://www.swig.org/">SWIG</A>.                                               #
#                                                                              #
#             The <A HREF="http://gcc.gnu.org/onlinedocs/gcj/About-CNI.html#About-CNI">CNI</A> (Compiled Native Interface) <A HREF="http://gcc.gnu.org/onlinedocs/gcj/Invocation.html#Invocation">invocation</A> functions, which  #
#             are required to use the Java classes, are initiated in this      #
#             script by the <A HREF="swig/CniWrapper.swig.html">CniWrapper</A> module. This module also provides       #
#             methods to convert a native string to or from a Java <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html">String</A>.     #
#                                                                              #
# Written By : Craig R. Campbell  -  August 2008                               #
#                                                                              #
# $Id: Driver.pl,v 1.4 2009/10/29 23:14:59 campbell Exp $
################################################################################

#$PERLLIB_INC = "/home/campbell/java/jasl/lib";
#unshift(@INC,$PERLLIB_INC);

#use diagnostics;
#use diagnostics -verbose;

use CniWrapper;
use Counters;
use Utilities;

my $cni_wrapper = new CniWrapper::CNI_WRAPPER();

# Test the Dice class.

printf("\nTesting the execution of the Dice class:\n\n");

for ($i = 0;$i < 12;$i++)
{
    $theDice = new Utilities::Dice();

#   printf("White: %d Colored: %d Combined: %2d\n",
#          $theDice->getWhiteDieValue(),
#          $theDice->getColoredDieValue(),
#          $theDice->getCombinedResult());

    printf("%s\n",$cni_wrapper->stringToConstChar($theDice->toString()));
}
