#!/usr/bin/perl
# ##############################################################################
# Driver.pl - This file contains the Driver script, which is used to test the  #
#             functionality of the public <A HREF="http://java.sun.com/">Java</A> classes defined in the <A HREF="jasl/jasl.html">jasl</A>     #
#             package hierarchy, accessed by <A HREF="http://www.perl.org/">Perl</A> using <A HREF="swig/swig.html">libraries</A> and files    #
#             generated by <A HREF="http://www.swig.org/">SWIG</A>.                                               #
#                                                                              #
#             The CNI run-time interface, which is required to use the Java    #
#             classes, must be initiated by this script through either the     #
#             <A HREF="swig/CniWrapper.swig.html">CniWrapper</A> module or <A HREF="http://search.cpan.org/~rusekd/GCJ-Cni/">GCJ-Cni</A>. The use of the former is necessary #
#             (obviously) to use the string conversion methods provided by the #
#             <A HREF="cni-wrapper/cni-wrapper.html">cni-wrapper</A> library. GCJ-Cni provides the same functionality     #
#             transparently.                                                   #
#                                                                              #
# Written By : Craig R. Campbell  -  August 2008                               #
#                                                                              #
# $Id: Driver.pl,v 1.1 2008/09/18 20:23:31 campbell Exp $
################################################################################

#$PERLLIB_INC = "/home/campbell/java/jasl/lib";
#unshift(@INC,$PERLLIB_INC);

#use diagnostics;
#use diagnostics -verbose;
#use GCJ::Cni;
use CniWrapper;
use Counters;

#GCJ::Cni::JvCreateJavaVM(undef);
#GCJ::Cni::JvAttachCurrentThread(undef,undef);
my $cni_wrapper = new CniWrapper::CNI_WRAPPER();

my $dice = new Counters::Dice();

printf "White die value : %d\t",$dice->getWhiteDieValue();
printf "Colored die value: %d\t",$dice->getColoredDieValue();
printf "Combined result : %d\n",$dice->getCombinedResult();

$dice = new Counters::Dice();

printf "White die value : %d\t",$dice->getWhiteDieValue();
printf "Colored die value: %d\t",$dice->getColoredDieValue();
printf "Combined result : %d\n",$dice->getCombinedResult();

#GCJ::Cni::JvDetachCurrentThread();
