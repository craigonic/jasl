// ************************************************************************** //
// <A HREF="../../jasl/counters/Dice.html">Dice</A>.swig - This file is an interface description for <A HREF="http://www.swig.org/">SWIG</A>. It is used to  //
//             generate libraries that link to the dynamic <A HREF="../../jasl/counters/counters.html">library</A> associated //
//             with this class. These libraries, along with the other files   //
//             that are generated, allow objects of this type to be accessed  //
//             from the supported scripting languages (<A HREF="http://www.perl.org/">Perl</A> and <A HREF="http://www.python.org/">Python</A>).      //
//                                                                            //
// Written By: Craig R. Campbell  -  August 2008                              //
//                                                                            //
// $Id: Dice.swig,v 1.2 2008/09/03 20:30:07 campbell Exp $
// ************************************************************************** //

%module Dice;

// This declaration is used to simplify the use of this object and simplify each
// library build. It is copied from <A HREF="../jaslWrapper.h.html">jaslWrapper.h</A>
//

%{
typedef jasl::counters::Dice Dice;
%}

// The C++ object generated by the constructor is managed by the <A HREF="http://java.sun.com/">Java</A> Virtual
// Machine created by the <A HREF="../wrappers.html">CNI wrapper</A>, so it is freed through garbage
// collection. This typemap overrides the default behavior of the wrapper
// generated by <A HREF="http://www.swig.org/">SWIG</A>, which is to explicitly delete the object along with the
// target language wrapper object when it goes out of scope.

%apply SWIGTYPE* DISOWN { Dice* };

// The public interface of the <A HREF="../../jasl/counters/Dice.html">Dice</A> class. Note that the type declarations
// match those in the header file (used in the build process) generated by gcjh,
// hence the typedefs.

typedef int jint;

class Dice
{
    public:

        Dice();
        virtual jint getWhiteDieValue();
        virtual jint getColoredDieValue();
        virtual jint getCombinedResult();
};
