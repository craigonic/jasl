// ************************************************************************** //
// Unit.swig - This file is an interface description for <A HREF="http://www.swig.org/">SWIG</A>. It is used to  //
//             generate shared libraries that link to the library created for //
//             the <A HREF="../jasl/counters/counters.html">package</A> containing this class. These libraries, along with //
//             the other files that are generated, allow public derived class //
//             objects within the counters package to be referenced with      //
//             pointers of this type from the supported scripting languages   //
//             (<A HREF="http://www.perl.org/">Perl</A> and <A HREF="http://www.python.org/">Python</A>).                                             //
//                                                                            //
//             NOTE: This file is intended for use in the <A HREF="Counters.swig.html">Counters</A> interface  //
//                   file, not to build standalone libraries.                 //
//                                                                            //
// Written By: Craig R. Campbell  -  May 2014                                 //
// ************************************************************************** //

%module Unit;

// The C++ object generated by the constructor is managed by the <A HREF="http://java.sun.com/">Java</A> Virtual
// Machine created by the <A HREF="CniWrapper.swig.html">CNI wrapper</A>, so it is freed through garbage
// collection. This typemap overrides the default behavior of the wrapper
// generated by SWIG, which is to explicitly delete the object along with the
// target language wrapper object when it goes out of scope.

%apply SWIGTYPE* DISOWN { Unit* };

// The public interface of the <A HREF="../jasl/counters/Unit.html">Unit</A> class.

class Unit
{
    public:

        // Constructor.
        //
        // Note that this constructor is intended strictly for use in
        // referencing an existing derived class object (e.g. one that has been
        // created using deserialization). If it is used directly, the behavior
        // of the access methods is undefined.

        Unit();

        // Access methods.

        ::java::lang::String* description();
        ::java::lang::String* toString();
};
