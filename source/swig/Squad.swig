// ************************************************************************** //
// Squad.swig - This file is an interface description for <A HREF="http://www.swig.org/">SWIG</A>. It is used to //
//              generate shared libraries that link to the library created    //
//              for the <A HREF="../jasl/counters/counters.html">package</A> containing this class. These libraries, along //
//              with the other files that are generated, allow objects of     //
//              this type to be accessed from the supported scripting         //
//              languages (<A HREF="http://www.perl.org/">Perl</A> and <A HREF="http://www.python.org/">Python</A>).                                  //
//                                                                            //
//              NOTE: This file is intended for use in the <A HREF="Counters.swig.html">Counters</A> interface //
//                    file, not to build standalone libraries.                //
//                                                                            //
// Written By: Craig R. Campbell  -  November 2009                            //
// ************************************************************************** //

%module Squad;

// The C++ object generated by the constructor is managed by the <A HREF="http://java.sun.com/">Java</A> Virtual
// Machine created by the <A HREF="CniWrapper.swig.html">CNI wrapper</A>, so it is freed through garbage
// collection. This typemap overrides the default behavior of the wrapper
// generated by SWIG, which is to explicitly delete the object along with the
// target language wrapper object when it goes out of scope.

%apply SWIGTYPE* DISOWN { Squad* };

// Add support for catching Java exceptions thrown by the constructor.

%exception Squad JAVA_EXCEPTION

// The public interface of the <A HREF="../jasl/counters/Squad.html">Squad</A> class.

class Squad
{
    public:

        // Constructor.

        Squad(::jasl::counters::Nationality$Nationalities* nationality,
              ::jasl::counters::UnitType$InfantryTypes* unitType,int firepower,
              int normalRange,int morale,int brokenMorale,bool canSelfRally,
              int basicPointValue,int experienceLevelRating,bool hasMaximumELR,
              ::jasl::counters::Classification$Classifications* classification,
              bool canAssaultFire,bool canSprayFire,int smokePlacementExponent);

        // Method declarations. See the indicated class documentation for more
        // details on the operation of each one.

        // <A HREF="../jasl/counters/Unit.html">Unit</A>.

        ::java::lang::String* description();

        // <A HREF="../jasl/counters/Fighting.html">Fighting</A>.

        ::java::lang::String* identity();
        ::java::lang::String* nationality();
        ::java::lang::String* status();
        ::java::lang::String* unitType();

        bool                  clearStatus(::jasl::counters::Status$States* state);
        void                  setIdentity(::java::lang::String* newIdentity);
        bool                  setStatus(::jasl::counters::Status$States* state);

        // <A HREF="../jasl/counters/Mobile.html">Mobile</A>.

        int                   movement();
        int                   portageCapacity();
        int                   portageLevel();

        void                  setPortageLevel(int portageLevel);

        // <A HREF="../jasl/counters/Infantry.html">Infantry</A>.

        int                   basicPointValue();
        int                   brokenMorale();
        bool                  canSelfRally();
        int                   experienceLevelRating();
        ::java::lang::String* firepower();
        int                   firepowerEquivalent();
        int                   morale();
        int                   normalRange();
        int                   portageValue();

        bool                  check(int modifier);
        bool                  restore(bool isLeaderPresent,int modifier);

        // <A HREF="../jasl/counters/Personnel.html">Personnel</A>.

        ::java::lang::String* classification();
        bool                  hasMaximumELR();

        // <A HREF="../jasl/counters/Squad.html">Squad</A>.

        bool                  canAssaultFire();
        bool                  canSprayFire();
        int                   smokePlacementExponent();
        ::java::lang::String* toString();
};
