// ************************************************************************** //
// Player.swig - This file is an interface description for <A HREF="http://www.swig.org/">SWIG</A>. It is used   //
//               to generate shared libraries that link to the library        //
//               created for the <A HREF="../../jasl/ui/data/data.html">package</A> containing this class. These         //
//               libraries, along with the other files that are generated,    //
//               allow objects of this type to be accessed from the supported //
//               scripting languages (<A HREF="http://www.perl.org/">Perl</A> and <A HREF="http://www.python.org/">Python</A>).                       //
//                                                                            //
//               NOTE: This file is intended for use in the <A HREF="UiData.swig.html">UiData</A> interface  //
//                     file, not to build standalone libraries.               //
//                                                                            //
// Written By: Craig R. Campbell  -  October 2014                             //
// ************************************************************************** //

%module Player;

// The C++ object generated by the constructor is managed by the <A HREF="http://java.sun.com/">Java</A> Virtual
// Machine created by the <A HREF="../CniWrapper/CniWrapper.swig.html">CNI wrapper</A>, so it is freed through garbage
// collection. This typemap overrides the default behavior of the wrapper
// generated by SWIG, which is to explicitly delete the object along with the
// target language wrapper object when it goes out of scope.

%apply SWIGTYPE* DISOWN { Player* };

// Add support for catching Java exceptions thrown by the constructor.

%exception Player JAVA_EXCEPTION

// The public interface of the <A HREF="../../jasl/ui/data/Player.html">Player</A> class.

class Player
{
    public:

        // Constructor.

        Player(::java::lang::String* name,
               ::jasl::counters::Nationality$Nationalities* nationality,
               int entryTurn);

        ::java::lang::String* toString();    // Name.
        ::java::lang::String* nationality();
        int                   entryTurn();

        void                  addUnit(::java::lang::String* unit);

        ::java::lang::String* toText();
};
